<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:DiagramDesigner.Controls;assembly=DiagramDesigner">

    <SolidColorBrush x:Key="ThemeColour" Color="DarkBlue" />
    <SolidColorBrush x:Key="ThemeColour2" Color="LightBlue" />
    <SolidColorBrush x:Key="ThemeColour3" Color="LightGoldenrodYellow" />

    <SolidColorBrush x:Key="FontColour" Color="White" />
    <SolidColorBrush x:Key="FontColour2" Color="Black" />

    <ControlTemplate x:Key="infoButtonTemplate" TargetType="Button">
        <Grid x:Name="grid" Opacity="0.5">
            <Ellipse Width="16"
                     Height="16"
                     Stroke="Black"
                     StrokeThickness="2"
                     HorizontalAlignment="Center"
                     VerticalAlignment="Center"
                     Fill="White"/>
            <Label Content="i"
                   FontWeight="Bold"
                   FontStyle="Italic"
                   HorizontalAlignment="Center"
                   HorizontalContentAlignment="Center"
                   VerticalAlignment="Center"
                   VerticalContentAlignment="Center"
                   FontSize="12" />
        </Grid>
        
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter TargetName="grid"
                        Property="Opacity"
                        Value="1.0" />
            </Trigger>
        </ControlTemplate.Triggers>
        
    </ControlTemplate>

    <!-- DockPanel Styling -->
    <Style x:Key="DockPanelTemplate" TargetType="{x:Type DockPanel}">
        <Setter Property="Background"
                    Value="{StaticResource ThemeColour2}">
        </Setter>
    </Style>
    
    <!-- ToolBar Styling -->
    <Style x:Key="ToolBarTemplate" TargetType="{x:Type ToolBar}">
        <Setter Property="Background"
                    Value="{StaticResource ThemeColour}">
        </Setter>
        <Setter Property="Foreground"
                    Value="{StaticResource FontColour}">
        </Setter>
    </Style>
    
    <!-- ProgressBar Styling -->
    <Style x:Key="ProgressBarTemplate" TargetType="{x:Type ProgressBar}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource ThemeColour}"/>
        <Setter Property="Background"
                    Value="White">
        </Setter>
        <Setter Property="Foreground"
                    Value="GreenYellow">
        </Setter>
    </Style>
    
    <!-- ComboBox Styling -->
    <Style x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Setter Property="Background"
                    Value="White">
        </Setter>
        <Setter Property="Foreground"
                    Value="Black">
        </Setter>
    </Style>

    <!-- Label Styling -->
    <Style x:Key="LabelTemplate" TargetType="{x:Type Label}">
        <Setter Property="Background"
                    Value="{StaticResource ThemeColour}">
        </Setter>
        <Setter Property="Foreground"
                    Value="White">
        </Setter>
    </Style>
    
    <!-- Button Styling -->
    <Style x:Key="ButtonTemplate" TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="{StaticResource ThemeColour}">
        </Setter>
        <Setter Property="Foreground"
                Value="{StaticResource FontColour}">
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseDirectlyOver"
                     Value="true">
                <Setter Property="Background" 
                        Value="{StaticResource ThemeColour3}">
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Expander Styling -->
    <Style x:Key="ExpanderTemplate"  TargetType="{x:Type Expander}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource ThemeColour}"/>
        <Setter Property="Foreground" Value="{StaticResource FontColour}"/>
        <Setter Property="Background" Value="{StaticResource ThemeColour}"/>
    </Style>

    <!-- ItemControl Styling -->
    <Style x:Key="ItemControlTemplate"  TargetType="{x:Type ItemsControl}">
        <Setter Property="BorderBrush" Value="{StaticResource ThemeColour}"/>
        <Setter Property="Foreground" Value="{StaticResource FontColour}"/>
        <Setter Property="Background" Value="White"/>
    </Style>

    <!-- ZoomBox Styling -->
    <Style x:Key="ToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Setter Property="SnapsToDevicePixels"
                        Value="true" />
        <Setter Property="OverridesDefaultStyle"
                        Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="Border"
                                    Background="{StaticResource NormalBrush}">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                         Value="true">
                            <Setter TargetName="Border"
                                            Property="Background"
                                            Value="{StaticResource DarkBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ZoomBoxTemplate" TargetType="{x:Type controls:ZoomBox}">
        <Setter Property="Background"
                Value="{StaticResource ThemeColour}">
            
        </Setter>
        <Setter Property="Foreground"
                Value="{StaticResource FontColour}">
                
        </Setter>
    </Style>



</ResourceDictionary>